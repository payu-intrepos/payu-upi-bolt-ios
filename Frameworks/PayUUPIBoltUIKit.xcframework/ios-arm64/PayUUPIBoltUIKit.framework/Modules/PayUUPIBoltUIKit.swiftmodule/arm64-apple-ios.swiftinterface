// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name PayUUPIBoltUIKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import DeveloperToolsSupport
import Foundation
import PayUAnalyticsKit
import PayUAssetLibraryKit
import PayUCrashReporter
import PayUNetworkReachability
import PayUUPIBoltBaseKit
import PayUUPIBoltKit
@_exported import PayUUPIBoltUIKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @objcMembers public class PayUUPIBoltUIHybridConstants : PayUUPIBoltKit.PayUUPIBoltHybridConstants {
  @_hasMissingDesignatedInitializers @objcMembers public class ScreenType {
    @objc deinit
  }
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class PayUUPIBoltUI : ObjectiveC.NSObject {
  @objc public class func initSDK(parentVC: UIKit.UIViewController, config: PayUUPIBoltUIKit.PayUUPIBoltUIConfig, delegate: any PayUUPIBoltUIKit.PayUUPIBoltUIDelegate) -> PayUUPIBoltUIKit.PayUUPIBoltUIInterface
  @objc public class func initSDK(parentVC: UIKit.UIViewController, configJSON: Any?, delegate: any PayUUPIBoltUIKit.PayUUPIBoltUIDelegate) -> PayUUPIBoltUIKit.PayUUPIBoltUIInterface?
  @objc public class func getInstance() -> PayUUPIBoltUIKit.PayUUPIBoltUIInterface?
  @objc public class func reset()
  @objc public class func isRegistered(with pg: Swift.String) -> Swift.Bool
  @objc public class func clearCache(with pg: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayUUPIBoltUIHybridResponseMethodName : ObjectiveC.NSObject {
  @objc public static let onPayUSuccess: Swift.String
  @objc public static let onPayUFailure: Swift.String
  @objc public static let onPayUCancel: Swift.String
  @objc public static let handlePayURetry: Swift.String
  @objc public static let generateHash: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayUUPIBoltUIHybridResponseTransformer : ObjectiveC.NSObject {
  @objc public func onError(_ error: (any Swift.Error)?) -> Any?
  @objc public func onPayUCancel(isTxnInitiated: Swift.Bool) -> Any?
  @objc public func onPayUFailure(response: PayUUPIBoltBaseKit.PayUUPIBoltResponse) -> Any?
  @objc public func onPayUSuccess(response: PayUUPIBoltBaseKit.PayUUPIBoltResponse) -> Any?
  @objc public func onPayUHandleRetry(for errorCode: Swift.Int, errorMessage: Swift.String, onCompletion: @escaping PayUUPIBoltBaseKit.PayUUPIBoltRetryGenerationCompletion) -> [Swift.String : Any]
  @objc public func generateHash(for param: [Swift.String : Swift.String], onCompletion: @escaping PayUUPIBoltKit.PayUUPIBoltHashGenerationCompletion) -> [Swift.String : Swift.String]
  @objc public func hashGenerated(args: Any?, errorCallback: @escaping ((any Swift.Error)?) -> Swift.Void)
  @objc public func retryHandled(args: Any?, errorCallback: @escaping ((any Swift.Error)?) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayUUPIBoltUIHashConstant : ObjectiveC.NSObject {
  @objc public static let hashString: Swift.String
  @objc public static let hashName: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol PayUUPIBoltUIDelegate : PayUUPIBoltKit.PayUUPIBoltHashDelegate {
  @objc func onPayUSuccess(response: PayUUPIBoltBaseKit.PayUUPIBoltResponse)
  @objc func onPayUFailure(response: PayUUPIBoltBaseKit.PayUUPIBoltResponse)
  @objc func onPayUCancel(isTxnInitiated: Swift.Bool)
}
@objc public enum PayUUPIBoltUIScreenType : Swift.Int {
  case all
  case transactionHistory
  case manageUPIAccounts
  case dispute
  case deregisterUPI
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class PayUUPIBoltUIInterface : ObjectiveC.NSObject {
  @objc public func isUPIBoltEnabled(callback: @escaping PayUUPIBoltBaseKit.PayUUPIBoltCallBack)
  @objc public func registerAndPay(paymentParams: PayUUPIBoltBaseKit.PayUUPIBoltPaymentParams)
  @objc public func openUPIManagement(screenType: PayUUPIBoltUIKit.PayUUPIBoltUIScreenType)
  @objc public func registerAndPay(paymentParamsJSON: Any?)
  @objc public func openUPIManagement(screenTypeString: Any?)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayUUPIBoltUIHybridUtils : PayUUPIBoltKit.PayUUPIBoltHybridUtils {
  @objc public class func getUIConfig(_ configDict: [Swift.String : Any]?) -> PayUUPIBoltUIKit.PayUUPIBoltUIConfig?
  @objc public class func getScreenType(_ string: Swift.String?) -> PayUUPIBoltUIKit.PayUUPIBoltUIScreenType
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayUFontFamily : ObjectiveC.NSObject {
  @objc public var regular: Swift.String
  @objc public var medium: Swift.String
  @objc public var semibold: Swift.String
  @objc public var bold: Swift.String
  @objc public init(regular: Swift.String, medium: Swift.String, semibold: Swift.String, bold: Swift.String)
  @objc public static func set(fontFamily: PayUUPIBoltUIKit.PayUFontFamily)
  @objc public static func reset()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class ScreenProtector : ObjectiveC.NSObject {
  @objc public static let shared: PayUUPIBoltUIKit.ScreenProtector
  @objc public var isEnabled: Swift.Bool
  @objc public func startScreenshotProtection(for view: UIKit.UIView)
  @objc public func stopScreenshotProtection(for view: UIKit.UIView)
  @objc public func startScreenRecordingProtection()
  @objc public func stopScreenRecordingProtection()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @IBDesignable @_Concurrency.MainActor @preconcurrency public class SecureContainerView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func willMove(toWindow newWindow: UIKit.UIWindow?)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension UIKit.UIFont {
  public var payuSDKFont: UIKit.UIFont {
    get
  }
}
extension UIKit.UIButton {
  @objc @_Concurrency.MainActor @preconcurrency dynamic public func payuCustomizeFont()
}
extension UIKit.UILabel {
  @objc @_Concurrency.MainActor @preconcurrency dynamic public func payuCustomizeFont()
}
extension UIKit.UITextField {
  @objc @_Concurrency.MainActor @preconcurrency dynamic public func payuCustomizeFont()
}
extension UIKit.UITextView {
  @objc @_Concurrency.MainActor @preconcurrency dynamic public func payuCustomizeFont()
}
@_inheritsConvenienceInitializers @objc public class PayUUPIBoltUIConfig : PayUUPIBoltBaseKit.PayUUPIBoltBaseConfig {
  @objc override dynamic public init()
  @objc override public init(merchantName: Swift.String, merchantKey: Swift.String, phone: Swift.String, email: Swift.String, refId: Swift.String, pluginTypes: [Swift.String], excludedBanksIINs: [Swift.String] = super, clientId: Swift.String = super, isProduction: Swift.Bool)
  @objc deinit
}
extension PayUUPIBoltUIKit.PayUUPIBoltUIScreenType : Swift.Equatable {}
extension PayUUPIBoltUIKit.PayUUPIBoltUIScreenType : Swift.Hashable {}
extension PayUUPIBoltUIKit.PayUUPIBoltUIScreenType : Swift.RawRepresentable {}
